#!/usr/bin/env node

var optimist = require('optimist'),
    Log4Node = require('log4node'),
    agent = require('../lib/agent.js'),
    file_loader = require('../lib/lib/file_loader.js');

var argv = optimist.argv;

function help() {
  console.log("Syntax : node-logstasth-agent [--log_level=info] [--config_file=toto.json|--config_dir=/etc/config] urls");
  console.log("Url examples");
  console.log("input://stdin://");
  console.log("input://file://main_input.txt?type=toto");
  console.log("output://stdout://");
  console.log("output://file:///tmp/toto.txt");
}

var logger = new Log4Node(argv.log_level || 'warning');

var logstashAgent = agent.create();

logstashAgent.set_logger(logger);

logstashAgent.on('error', function(module_name, error) {
  logger.error("Error on module " + module_name + " : " + error);
});

function load_config_file(config) {
  if (argv.config_file) {
    logger.info("Loading config file : " + argv.config_file);
    file_loader.load_file(argv.config_file, function(err, result) {
      if (err) {
        logger.error("Unable to load config file : " + err.toString());
        process.exit(1);
      }
      logger.info("File loaded, " + result.length + " urls found");
      after_config_file(config.concat(result));
    });
  }
  else {
    after_config_file(config);
  }
}

function after_config_file(config) {
  if (argv.config_dir) {
    logger.info("Loading config files from : " + argv.config_dir);
    file_loader.load_directory(argv.config_dir, function(err, result) {
      if (err) {
        logger.error("Unable to load config from directory : " + err.toString());
        process.exit(1);
      }
      logger.info("Files loaded from directory, " + result.length + " urls found");
      after_config_directory(config.concat(result));
    });
  }
  else {
    after_config_directory(config);
  }
}

function after_config_directory(config) {
  logger.info("Loading config : " + config.length + " urls");

  logstashAgent.load_urls(config, function(err) {
    if (err) {
      logger.error("Unable to load urls : " + err);
      process.exit(2);
    }
    logger.info("Config loaded.");
  });

}

load_config_file(argv._);
